<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:c="http://www.springframework.org/schema/c"
	   xmlns:p="http://www.springframework.org/schema/p"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.2.xsd">

	<!-- .......................................................... -->
	<!-- spring3
          객체명.setPeriodTime(10);
           id값은 관례적으로 클래스명을 사용한다.(첫글자는 소문자)
     -->
	<bean id="monitor"  class="spring3.SystemMonitor" p:periodTime="20" p:sender-ref="smsSender">

		<!--
        <property name="periodTime">
                <value>10</value>
        </property>
        <property name="sender">
                <ref bean="smsSender" />
        </property>
         -->

	</bean>
	<bean id="smsSender" class="spring3.SmsSender" />

	<!-- .......................................................... -->
	<!-- spring4 - c네임스페이스(c:변수형 = "값")-->
	<!-- spring4 c네임스페이스를 이용-->
<!--	<bean id="monitor2" class="spring4.SystemMonitor"
		  c:periodTime="30" c:sender-ref="smsSender2">
		&lt;!&ndash;
        <constructor-arg value="10" /> =>기본형 멤버변수
        <constructor-arg ref="smsSender2" /> =>객체형 멤버변수
        &ndash;&gt;
	</bean>
	<bean id="smsSender2"  class="spring4.SmsSender" />-->

	<!-- .......................................................... -->
	<!-- spring 5 ( 익명 빈즈객체를 전달 받는 방법, 네임스페이스( p:~~ , c:~~~) 혼용도 가능-->

<!--
	<bean id="monitor3" class="spring5.SystemMonitor" p:periodTime="30"> // id값을 못읽어온다..
		&lt;!&ndash;<property name="sender" ref="smsSender3"/>&ndash;&gt;
		<property name="sender">
			&lt;!&ndash; <ref bean="smsSender3" /> &ndash;&gt;
			<bean    class="spring5.SmsSender">
				<constructor-arg value="false" />
			</bean>
		</property>
	</bean>
-->

<!--	<bean id="smsSender3" class="spring5.SmsSender">
		<constructor-arg value="true" />
	</bean>-->

	<!-- .......................................................... -->
	<!-- spring 6 (list) -->
	<bean name="performanceMonitor" class="spring6.PerformanceMonitor" scope="prototype">
		<property name="number">
			<list>
				<value>0.2</value>
				<value>0.3</value>
				<value>0.4</value>
			</list>
		</property>
	</bean>

	<!-- .......................................................... -->
	<!-- spring 7 (subSet) -->
<!--	<bean name="customer" class="spring7.Customer">
		<constructor-arg>
			<set>
				<value>1</value>
			</set>
		</constructor-arg>
&lt;!&ndash;		<property name="subSet">
			<set>
				<value>1</value>
				<value>4</value>
			</set>
		</property>&ndash;&gt;
	</bean>-->

	<!-- .......................................................... -->
	<!-- spring 8 (BookClient book객체) <list>, <set>, <prop>, <props>
					<prop key="키값"> </prop>

	-->
	<bean name="bookClient" class="spring8.BookClient">
				<property name="prop">
                    <props>
                        <prop key="server1">192.168.0.70</prop>
						<prop key="connectionTimeout">5000</prop>
						<prop key="Retry">3</prop>
                    </props>
                </property>
	</bean>

	<!-- spring 9 (BookClient book객체) <list>, <set>, <prop>, <props>
					<prop key="키값"> </prop>
	-->
	<bean name="protocolhanderfactory" class="spring9.ProtocolHanderFactory">
		<property name="map">
			<map>
				<entry>
					<key><value>soap</value></key>
					<ref bean="soapHandler"/>
				</entry>
				<entry> <!--=>빈식별자가 soapHandler가 있는 객체를 찾아서객체의 구성요소로 넣어달라는 환경설정 구문-->
					<key><value>rest</value></key>
					<ref bean="restHandler"/>
				</entry>

			</map>
		</property>
	</bean>
	<!-- soap , resh~~ -->
	<bean name="soapHandler" class="spring9.Soaphandler"/>
	<bean name="restHandler" class="spring9.RestHandler"/>


</beans>





